version: "3.9"

services:
  db:
    image: postgres:15-alpine
    container_name: liner-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-liner}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-linerpass}
      POSTGRES_DB: ${POSTGRES_DB:-linerdb}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: dockerfile
    image: liner-backend:latest
    container_name: liner-backend
    environment:
      # SQLAlchemy URL for Postgres
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER:-liner}:${POSTGRES_PASSWORD:-linerpass}@db:5432/${POSTGRES_DB:-linerdb}
      # Auth / other envs can go here
      CORS_ORIGINS: "*"
      PORT: 8080
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8080"
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        # Expose backend on host 8000; browser must call host, not container name
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL-http://localhost:8000}
    image: liner-frontend:latest
    container_name: liner-frontend
    depends_on:
      - backend
    ports:
      - "3000:3000"
    restart: unless-stopped

volumes:
  pgdata:
