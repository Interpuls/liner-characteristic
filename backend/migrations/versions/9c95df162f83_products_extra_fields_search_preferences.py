"""products extra fields + search_preferences

Revision ID: 9c95df162f83
Revises: 
Create Date: 2025-08-25 13:08:41.589517

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql
from sqlalchemy import Text

# revision identifiers, used by Alembic.
revision: str = '9c95df162f83'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('product_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('brand', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('model', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('teat_size', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('teat_length', sa.Float(), nullable=True),
    sa.Column('mp_depth_mm', sa.Float(), nullable=True),
    sa.Column('orifice_diameter', sa.Float(), nullable=True),
    sa.Column('hoodcup_diameter', sa.Float(), nullable=True),
    sa.Column('return_to_lockring', sa.Float(), nullable=True),
    sa.Column('lockring_diameter', sa.Float(), nullable=True),
    sa.Column('overall_length', sa.Float(), nullable=True),
    sa.Column('milk_tube_id', sa.Float(), nullable=True),
    sa.Column('barrell_wall_thickness', sa.Float(), nullable=True),
    sa.Column('barrell_conicity', sa.Float(), nullable=True),
    sa.Column('hardness', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code', name='uq_products_code')
    )
    op.create_index(op.f('ix_products_brand'), 'products', ['brand'], unique=False)
    op.create_index(op.f('ix_products_code'), 'products', ['code'], unique=False)
    op.create_index(op.f('ix_products_model'), 'products', ['model'], unique=False)
    op.create_index('ix_products_name', 'products', ['name'], unique=False)
    op.create_index(op.f('ix_products_product_type'), 'products', ['product_type'], unique=False)
    op.create_index(op.f('ix_products_teat_size'), 'products', ['teat_size'], unique=False)
    op.create_table('test_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code', name='uq_test_types_code')
    )
    op.create_index(op.f('ix_test_types_code'), 'test_types', ['code'], unique=False)
    op.create_index('ix_test_types_name', 'test_types', ['name'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role', sa.Enum('admin', 'user', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email', name='uq_users_email')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=False)
    op.create_index('ix_users_role', 'users', ['role'], unique=False)
    op.create_table('search_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('filters', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'name', name='uq_user_pref_name')
    )
    op.create_index(op.f('ix_search_preferences_name'), 'search_preferences', ['name'], unique=False)
    op.create_index(op.f('ix_search_preferences_user_id'), 'search_preferences', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_search_preferences_user_id'), table_name='search_preferences')
    op.drop_index(op.f('ix_search_preferences_name'), table_name='search_preferences')
    op.drop_table('search_preferences')
    op.drop_index('ix_users_role', table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index('ix_test_types_name', table_name='test_types')
    op.drop_index(op.f('ix_test_types_code'), table_name='test_types')
    op.drop_table('test_types')
    op.drop_index(op.f('ix_products_teat_size'), table_name='products')
    op.drop_index(op.f('ix_products_product_type'), table_name='products')
    op.drop_index('ix_products_name', table_name='products')
    op.drop_index(op.f('ix_products_model'), table_name='products')
    op.drop_index(op.f('ix_products_code'), table_name='products')
    op.drop_index(op.f('ix_products_brand'), table_name='products')
    op.drop_table('products')
    # ### end Alembic commands ###
